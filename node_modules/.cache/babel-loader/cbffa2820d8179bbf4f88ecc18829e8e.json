{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\OneDrive\\\\Desktop\\\\Meme-Generator\\\\src\\\\components\\\\Meme.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Meme() {\n  _s();\n\n  const [meme, setMeme] = React.useState({\n    topText: \"\",\n    bottomText: \"\",\n    randomImage: \"http://i.imgflip.com/1bij.jpg\"\n  });\n  const [allMemes, setAllMemes] = React.useState([]);\n  React.useEffect(() => {\n    async function getMemes() {\n      const res = await fetch(\"https://api.imgflip.com/get_memes\");\n      const data = await res.json();\n      setAllMemes(data.data.memes);\n    }\n\n    getMemes();\n  }, []);\n\n  function getMemeImage() {\n    const randomNumber = Math.floor(Math.random() * allMemes.length);\n    const url = allMemes[randomNumber].url;\n    setMeme(prevMeme => ({ ...prevMeme,\n      randomImage: url\n    }));\n  }\n\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setMeme(prevMeme => ({ ...prevMeme,\n      [name]: value\n    }));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Top text\",\n        className: \"form--input\",\n        name: \"topText\",\n        value: meme.topText,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Bottom text\",\n        className: \"form--input\",\n        name: \"bottomText\",\n        value: meme.bottomText,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"form--button\",\n        onClick: getMemeImage,\n        children: \"Get a new meme image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meme\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: meme.randomImage,\n        className: \"meme--image\",\n        alt: meme.randomImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"meme--text top\",\n        children: meme.topText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"meme--text bottom\",\n        children: meme.bottomText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Meme, \"y+KJl/6KPIrBh25IDXDxMf7c29g=\");\n\n_c = Meme;\n\nvar _c;\n\n$RefreshReg$(_c, \"Meme\");","map":{"version":3,"names":["React","Meme","meme","setMeme","useState","topText","bottomText","randomImage","allMemes","setAllMemes","useEffect","getMemes","res","fetch","data","json","memes","getMemeImage","randomNumber","Math","floor","random","length","url","prevMeme","handleChange","event","name","value","target"],"sources":["C:/Users/HP/OneDrive/Desktop/Meme-Generator/src/components/Meme.js"],"sourcesContent":["import React from \"react\";\n\n\nexport default function Meme() {\n  const [meme, setMeme] = React.useState({\n    topText: \"\",\n    bottomText: \"\",\n    randomImage: \"http://i.imgflip.com/1bij.jpg\",\n  });\n  const [allMemes, setAllMemes] = React.useState([]);\n\n\n  React.useEffect(() => {\n    async function getMemes() {\n      const res = await fetch(\"https://api.imgflip.com/get_memes\");\n      const data = await res.json();\n      setAllMemes(data.data.memes);\n    }\n    getMemes();\n  }, []);\n\n  function getMemeImage() {\n    const randomNumber = Math.floor(Math.random() * allMemes.length);\n    const url = allMemes[randomNumber].url;\n    setMeme((prevMeme) => ({\n      ...prevMeme,\n      randomImage: url,\n    }));\n  }\n\n  function handleChange(event) {\n    const { name, value } = event.target;\n    setMeme((prevMeme) => ({\n      ...prevMeme,\n      [name]: value,\n    }));\n  }\n\n  return (\n    <main>\n      <div className=\"form\">\n        <input\n          type=\"text\"\n          placeholder=\"Top text\"\n          className=\"form--input\"\n          name=\"topText\"\n          value={meme.topText}\n          onChange={handleChange}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Bottom text\"\n          className=\"form--input\"\n          name=\"bottomText\"\n          value={meme.bottomText}\n          onChange={handleChange}\n        />\n        <button className=\"form--button\" onClick={getMemeImage}>\n          Get a new meme image \n        </button>\n      </div>\n      <div className=\"meme\">\n        <img src={meme.randomImage} className=\"meme--image\" alt={meme.randomImage}/>\n        <h2 className=\"meme--text top\">{meme.topText}</h2>\n        <h2 className=\"meme--text bottom\">{meme.bottomText}</h2>\n      </div>\n    </main>\n  );\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,eAAe,SAASC,IAAT,GAAgB;EAAA;;EAC7B,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,KAAK,CAACI,QAAN,CAAe;IACrCC,OAAO,EAAE,EAD4B;IAErCC,UAAU,EAAE,EAFyB;IAGrCC,WAAW,EAAE;EAHwB,CAAf,CAAxB;EAKA,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,KAAK,CAACI,QAAN,CAAe,EAAf,CAAhC;EAGAJ,KAAK,CAACU,SAAN,CAAgB,MAAM;IACpB,eAAeC,QAAf,GAA0B;MACxB,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,mCAAD,CAAvB;MACA,MAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;MACAN,WAAW,CAACK,IAAI,CAACA,IAAL,CAAUE,KAAX,CAAX;IACD;;IACDL,QAAQ;EACT,CAPD,EAOG,EAPH;;EASA,SAASM,YAAT,GAAwB;IACtB,MAAMC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBb,QAAQ,CAACc,MAApC,CAArB;IACA,MAAMC,GAAG,GAAGf,QAAQ,CAACU,YAAD,CAAR,CAAuBK,GAAnC;IACApB,OAAO,CAAEqB,QAAD,KAAe,EACrB,GAAGA,QADkB;MAErBjB,WAAW,EAAEgB;IAFQ,CAAf,CAAD,CAAP;EAID;;EAED,SAASE,YAAT,CAAsBC,KAAtB,EAA6B;IAC3B,MAAM;MAAEC,IAAF;MAAQC;IAAR,IAAkBF,KAAK,CAACG,MAA9B;IACA1B,OAAO,CAAEqB,QAAD,KAAe,EACrB,GAAGA,QADkB;MAErB,CAACG,IAAD,GAAQC;IAFa,CAAf,CAAD,CAAP;EAID;;EAED,oBACE;IAAA,wBACE;MAAK,SAAS,EAAC,MAAf;MAAA,wBACE;QACE,IAAI,EAAC,MADP;QAEE,WAAW,EAAC,UAFd;QAGE,SAAS,EAAC,aAHZ;QAIE,IAAI,EAAC,SAJP;QAKE,KAAK,EAAE1B,IAAI,CAACG,OALd;QAME,QAAQ,EAAEoB;MANZ;QAAA;QAAA;QAAA;MAAA,QADF,eASE;QACE,IAAI,EAAC,MADP;QAEE,WAAW,EAAC,aAFd;QAGE,SAAS,EAAC,aAHZ;QAIE,IAAI,EAAC,YAJP;QAKE,KAAK,EAAEvB,IAAI,CAACI,UALd;QAME,QAAQ,EAAEmB;MANZ;QAAA;QAAA;QAAA;MAAA,QATF,eAiBE;QAAQ,SAAS,EAAC,cAAlB;QAAiC,OAAO,EAAER,YAA1C;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAjBF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAsBE;MAAK,SAAS,EAAC,MAAf;MAAA,wBACE;QAAK,GAAG,EAAEf,IAAI,CAACK,WAAf;QAA4B,SAAS,EAAC,aAAtC;QAAoD,GAAG,EAAEL,IAAI,CAACK;MAA9D;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAI,SAAS,EAAC,gBAAd;QAAA,UAAgCL,IAAI,CAACG;MAArC;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAI,SAAS,EAAC,mBAAd;QAAA,UAAmCH,IAAI,CAACI;MAAxC;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA;MAAA;MAAA;MAAA;IAAA,QAtBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA8BD;;GAjEuBL,I;;KAAAA,I"},"metadata":{},"sourceType":"module"}